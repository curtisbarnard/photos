---
import { Image } from 'astro:assets';
interface Photo {
  src: string;
  alt: string;
  date: number;
  dateFormatted?: string;
}

function formatDate(number: number): string {
  const str = number.toString();
  const formattedDate = `${str.slice(0, 4)}.${str.slice(4, 6)}.${str.slice(6, 8)}`;
  return formattedDate;
}

const { photos = [] }: { photos?: Photo[] } = Astro.props;
photos.forEach((photo) => {
  photo.dateFormatted = formatDate(photo.date);
});
---

<div class='gallery'>
  {
    photos.map((photo) => (
      <div class='photo-container'>
        <Image
          class='astro-photo'
          src={photo.src}
          format='webp'
          widths={[500, 1000]}
          sizes='(max-width: 500px) 500px, 1000px'
          alt={photo.alt}
          loading='lazy'
        />
        <div class='photo-overlay'>
          <div />
          <p>{photo.alt}</p>
          <p>{photo.dateFormatted}</p>
        </div>
      </div>
    ))
  }
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // For fading the photos on click
    const photoContainers = document.querySelectorAll('.photo-container');

    photoContainers.forEach((container) => {
      const img = container.querySelector('.astro-photo');
      const overlay = container.querySelector('.photo-overlay');

      container.addEventListener('click', () => {
        if (img) {
          const isFaded = img.classList.toggle('faded');
          if (overlay) {
            (overlay as HTMLElement).style.display = isFaded ? 'grid' : 'none';
          }
        }
      });
    });
  });
</script>

<style>
  p {
    font-size: 1rem;
    font-weight: 500;
    letter-spacing: -0.04em;
  }
  .gallery {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
  }

  .photo-container {
    position: relative;
    display: inline-block;
  }

  .astro-photo {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .faded {
    opacity: 0.05;
  }

  .photo-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    align-items: center;
    justify-content: center;
    color: rgb(0, 0, 0);
  }

  .photo-overlay p {
    margin: 0;
    max-width: 65ch;
    padding: 1rem;
  }

  .photo-overlay :last-child {
    align-self: end;
    justify-self: end;
  }
</style>
